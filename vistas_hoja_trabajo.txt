SEGUIR EL ORDEN DE LAS VISTAS
VISTA CON CALCULO FINAL
1)----------------------------------------------CREA LA HOJA DE TRABAJO---------------
create view hoja_de_trabajo as
SELECT `fecha_aj` , `cod_cuenta_aj` , `cuenta_aj` , `debe_aj` , `haber_aj` , `slddeudor_aj` , `sldacreedor_aj` , `grupo_aj` , `year_aj` , `mes_aj` , 
`balance_aj` , `fecha` , `cod_cuenta` , `cuenta` , `debe` , `haber` , `t_bl_inicial_idt_bl_inicial` , `tipo` , `sld_deudor` , `sld_acreedor` , `year` , `mes` 
, (coalesce( `slddeudor_aj` , 0 )) + ( coalesce( `sld_deudor` , 0 ) - coalesce( `sldacreedor_aj` , 0 )) + ( coalesce( `sld_acreedor` , 0 ) ) AS sum_deudor,
 concat('0.00') as sum_acreedor FROM `vistabalanceresultadosajustados` GROUP BY cod_cuenta HAVING 
(coalesce( `slddeudor_aj` , 0 )) + ( coalesce( `sld_deudor` , 0 )) > (coalesce( `sldacreedor_aj` , 0 )) + ( coalesce( `sld_acreedor` , 0 ))
UNION
SELECT `fecha_aj` , `cod_cuenta_aj` , `cuenta_aj` , `debe_aj` , `haber_aj` , `slddeudor_aj` , `sldacreedor_aj` , `grupo_aj` , `year_aj` , `mes_aj` , 
`balance_aj` , `fecha` , `cod_cuenta` , `cuenta` , `debe` , `haber` , `t_bl_inicial_idt_bl_inicial` , `tipo` , `sld_deudor` , `sld_acreedor` , `year` , `mes` ,
concat('0.00') as sum_deudor, 
(coalesce( `sldacreedor_aj` , 0 )) + ( coalesce( `sld_acreedor` , 0 )) - (coalesce( `slddeudor_aj` , 0 )) + ( coalesce( `sld_deudor` , 0 ) ) AS sum_acreedor 
FROM `vistabalanceresultadosajustados` GROUP BY cod_cuenta HAVING
(coalesce( `sldacreedor_aj` , 0 )) + ( coalesce( `sld_acreedor` , 0 )) > (coalesce( `slddeudor_aj` , 0 )) + ( coalesce( `sld_deudor` , 0 ))
UNION
SELECT `fecha_aj` , `cod_cuenta_aj` , `cuenta_aj` , `debe_aj` , `haber_aj` , `slddeudor_aj` , `sldacreedor_aj` , `grupo_aj` , `year_aj` , `mes_aj` , 
`balance_aj` , `fecha` , `cod_cuenta` , `cuenta` , `debe` , `haber` , `t_bl_inicial_idt_bl_inicial` , `tipo` , `sld_deudor` , `sld_acreedor` , `year` ,
 `mes` , concat('0.00') AS sum_deudor, concat('0.00') AS sum_acreedor FROM `vistabalanceresultadosajustados` GROUP BY cod_cuenta HAVING (coalesce( `sldacreedor_aj` , 0 )) + ( coalesce( `sld_acreedor` , 0 )) = (coalesce( `slddeudor_aj` , 0 )) + ( coalesce( `sld_deudor` , 0 ))

vista agrupacion correccion
2)-----------------------------------------CREA LA AGRUPACION DE CUNETAS MAYORIZADAS--------------------
CREATE VIEW AGRUPACION AS SELECT hj.cod_cuenta as referencia,c.cod_clase as clase,pl.t_grupo_cod_grupo as grupo,
 pl.t_cuenta_cod_cuenta as cuenta,pl.t_subcuenta_cod_subcuenta as subcuenta,pl.t_auxiliar_cod_cauxiliar as auxiliar,
 pl.t_subauxiliar_cod_subauxiliar as subauxiliar, sum(hj.sum_deudor) as deudor, sum(hj.sum_acreedor) as acreedor,hj.t_bl_inicial_idt_bl_inicial as contabilidad,hj.year,CASE mes
            WHEN 'ENERO'        THEN 1
            WHEN 'FEBRERO'        THEN 2
            WHEN 'MARZO'        THEN 3
            WHEN 'ABRIL'        THEN 4
            WHEN 'MAYO'            THEN 5
            WHEN 'JUNIO'        THEN 6
            WHEN 'JULIO'        THEN 7
            WHEN 'AGOSTO'        THEN 8
            WHEN 'SEPTIEMBRE'    THEN 9
            WHEN 'OCTUBRE'        THEN 10
            WHEN 'NOVIEMBRE'        THEN 11 
            WHEN 'DICIEMBRE'        THEN 12 
        END as mes  FROM
 `hoja_de_trabajo` hj join t_plan_de_cuentas pl JOIN t_clase c JOIN t_grupo g
 where hj.cod_cuenta = pl.cod_cuenta AND pl.t_grupo_cod_grupo = g.cod_grupo and g.t_clase_cod_clase = c.cod_clase group by hj.cod_cuenta

3)--------------------------------------REALIZA LA SUMA DE LAS CUENTAS AGRUPADAS---------------------
VISTA DE AGRUPACION YA SUMADAS
CREATE VIEW sumatoriadeagrupacion AS 
SELECT c.cod_clase as codigo, c.nombre_clase as cuenta, SUM(deudor) as s_deudor, SUM(acreedor) as s_acreedor, ag.contabilidad,ag.year,ag.mes FROM `agrupacion` ag JOIN t_grupo g JOIN t_clase c WHERE ag.grupo = g.cod_grupo and g.t_clase_cod_clase = c.cod_clase GROUP by c.cod_clase
UNION
SELECT g.cod_grupo as codigo, g.nombre_grupo as cuenta, SUM(deudor) as s_deudor, SUM(acreedor) as s_acreedor, ag.contabilidad,ag.year,ag.mes FROM `agrupacion` ag JOIN t_grupo g JOIN t_clase c WHERE ag.grupo = g.cod_grupo and g.t_clase_cod_clase = c.cod_clase GROUP by g.cod_grupo
UNION
SELECT ct.cod_cuenta as codigo, ct.nombre_cuenta as cuenta, SUM(deudor) as s_deudor, SUM(acreedor) as s_acreedor, ag.contabilidad,ag.year,ag.mes FROM `agrupacion` ag JOIN t_grupo g JOIN t_clase c JOIN t_cuenta ct WHERE ag.grupo = g.cod_grupo and g.t_clase_cod_clase = c.cod_clase and ag.cuenta = ct.cod_cuenta GROUP by ct.cod_cuenta
UNION
SELECT sb.cod_subcuenta as codigo, sb.nombre_subcuenta as cuenta, SUM(deudor) as s_deudor, SUM(acreedor) as s_acreedor, ag.contabilidad,ag.year,ag.mes FROM `agrupacion` ag JOIN t_grupo g JOIN t_clase c JOIN t_cuenta ct JOIN t_subcuenta sb WHERE ag.grupo = g.cod_grupo and g.t_clase_cod_clase = c.cod_clase and ag.cuenta = ct.cod_cuenta AND ag.subcuenta = sb.cod_subcuenta GROUP by sb.cod_subcuenta

4)-------------------------------------MUESTRA EL ESTADO DE RESULTADOS-----------------------------
VISTA ESTADO DE RESULTADOS
CREATE VIEW estadoresultados AS 
SELECT codigo,cuenta,`s_deudor`,`s_acreedor`,(coalesce( `s_deudor` , 0 )) - ( coalesce( `s_acreedor` , 0 ))  AS total,contabilidad,year,mes  FROM `sumatoriadeagrupacion` GROUP by codigo HAVING `s_deudor` > `s_acreedor`
UNION
SELECT codigo,cuenta,`s_deudor`,`s_acreedor`,(coalesce( `s_acreedor` , 0 )) - ( coalesce( `s_deudor` , 0 ))  AS total,contabilidad,year,mes  FROM `sumatoriadeagrupacion` GROUP by codigo HAVING `s_acreedor` > `s_deudor`
UNION
SELECT codigo,cuenta,`s_deudor`,`s_acreedor`,concat('0,00')  AS total,contabilidad,year,mes  FROM `sumatoriadeagrupacion` GROUP by codigo HAVING `s_acreedor` = `s_deudor`

------------------------------------------OPCIONAL HOJA DE TRABAJO SIN CALCULOS DE RESULTADOS------------
vista sin calculo final
create view hoja_de_trabajo as
SELECT `fecha_aj` , `cod_cuenta_aj` , `cuenta_aj` , `debe_aj` , `haber_aj` , `slddeudor_aj` , `sldacreedor_aj` , `grupo_aj` , `year_aj` , `mes_aj` , 
`balance_aj` , `fecha` , `cod_cuenta` , `cuenta` , `debe` , `haber` , `t_bl_inicial_idt_bl_inicial` , `tipo` , `sld_deudor` , `sld_acreedor` , `year` , `mes` , 
 sum( `slddeudor_aj` + `sld_deudor` ) AS sum_deudor, sum( `sldacreedor_aj` + `sld_acreedor` ) AS sum_acreedor
FROM `vistabalanceresultadosajustados`
GROUP BY cod_cuenta



